// 1. Почему код дает именно такие результаты?
'use strict';

var a = 1, b = 1, c, d;

// Выражение 1
c = ++a; alert(c);           // 2
// a изначально равно 1, выражение ++a добавляет 1 к a. Рельзутат: 1 + 1 = 2

// Выражение 2
d = b++; alert(d);           // 1
/**
 * Хоть b и увеличилось на единицу, тем не менее
 * d присвоится еще предыдущее значение b. Результат: 1
 * в этом месте кода b уже будет 2
 */
console.log(b); // b = 2

// Выражение 3
c = (2+ ++a); alert(c);      // 5
/**
 *  Также точно как и в первом случае, 
 * сначала вычисляется ++a, следовательно оно будет равно 3 
 * так как до этого a = 2. a = 2 + 1. И добавляем еще 2
 * Результат: 2 + 3 = 5
 */

 // Выражение 4
d = (2+ b++); alert(d);      // 4
/**
 *  Также как во втором случае b увеличится на 1, 
 * но для данного выражения будет использована старое значение b,
 * которое равняется ещё 2. Резульат: 2 + 2 = 4
 * но в этом месте кода b = 3
 */
console.log(b); // b = 3

alert(a);                    // 3
// С выражения 3 значение a не менялось
alert(b);                    // 3
// С выражения 4 значание b поменялось, и уже теперь оно равно 3, а не 2
